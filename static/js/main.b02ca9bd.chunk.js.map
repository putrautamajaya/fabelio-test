{"version":3,"sources":["components/api.js","components/dropdown.js","components/card.js","components/master.js","App.js","serviceWorker.js","index.js"],"names":["API","getFurniture","response","undefined","axios","get","console","log","data","FurnitureStyle","state","selections","open","label","onSelect","index","props","window","addEventListener","e","id","el","document","getElementById","contains","target","setState","prevProps","this","style","position","Grid","container","direction","justify","alignItems","className","onClick","backgroundColor","padding","border","item","width","boxSizing","map","i","key","name","selected","Component","Card","renderFurnitureStyle","toString","replace","num","num_parts","split","join","product","marginBottom","numberWithCommas","price","description","furniture_style","delivery_time","Master","furnitures","styles","deliveryTimes","value","shows","search","event","products","toLowerCase","filter","includes","selectStyle","selectDeliveryTime","filterByStyle","selectedStyle","result","push","length","concat","show","getUniqueObjects","objects","uniqueObjects","check","object","filterByDeliveryTime","selectedDelivery","delivery","parseInt","furniture_styles","spacing","lg","type","placeholder","onChange","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b02ca9bd.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API = {\n  async getFurniture() {\n    let response = undefined;\n\n    try {\n      response = await axios.get(\n        \"https://www.mocky.io/v2/5c9105cb330000112b649af8\"\n      );\n    } catch (error) {\n      console.log(\"Error while getting furniture\", error);\n      return error;\n    }\n\n    return response.data;\n  }\n};\n\nexport default API;\n","import React, { Component } from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\n\nclass FurnitureStyle extends Component {\n  state = { selections: [], open: false, label: \"\" };\n\n  componentDidMount() {\n    window.addEventListener(\"click\", e => {\n      const { id } = this.props;\n      const el = document.getElementById(`${id ? id : \"dropdown\"}`);\n\n      if (el && el.contains(e.target)) {\n        return;\n      } else {\n        this.setState({ open: false });\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.setState({\n        selections: this.props.selections,\n        label: this.props.label\n      });\n    }\n  }\n\n  onSelect = index => {\n    if (this.props.onSelect) {\n      this.props.onSelect(index);\n    }\n  };\n\n  render() {\n    const { id } = this.props;\n    const { selections, open, label } = this.state;\n\n    return (\n      <div id={id ? id : \"dropdown\"} style={{ position: \"relative\" }}>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n          className=\"onHover\"\n          onClick={() => this.setState({ open: !open })}\n          style={{\n            backgroundColor: \"white\",\n            padding: \"5px\",\n            border: \"1px solid #999999\"\n          }}\n        >\n          <Grid item>{label}</Grid>\n\n          <Grid item>\n            <ArrowDropDownIcon />\n          </Grid>\n        </Grid>\n\n        {open && (\n          <div\n            style={{\n              position: \"absolute\",\n              width: \"100%\",\n              border: \"1px solid #999999\",\n              boxSizing: \"border-box\"\n            }}\n          >\n            {selections.map((style, i) => {\n              return (\n                <div\n                  key={i}\n                  className=\"onHover\"\n                  style={{ backgroundColor: \"white\", padding: \"5px\" }}\n                  onClick={() => this.onSelect(i)}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"space-between\"\n                    alignItems=\"center\"\n                  >\n                    <Grid item>{style.name}</Grid>\n\n                    <Grid item>\n                      {style.selected ? (\n                        <CheckBoxIcon />\n                      ) : (\n                        <CheckBoxOutlineBlankIcon />\n                      )}\n                    </Grid>\n                  </Grid>\n                </div>\n              );\n            })}\n          </div>\n        )}\n\n        <hr />\n      </div>\n    );\n  }\n}\n\nexport default FurnitureStyle;\n","import React, { Component } from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\n\nclass Card extends Component {\n  state = {};\n\n  numberWithCommas(num) {\n    if (num) {\n      var num_parts = num.toString().split(\".\");\n      num_parts[0] = num_parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return num_parts.join(\".\");\n    } else {\n      return \"0\";\n    }\n  }\n\n  renderFurnitureStyle = style => {\n    return style.toString().replace(/,/g, \", \");\n  };\n\n  render() {\n    const { product } = this.props;\n\n    return (\n      <div className=\"card\">\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n          style={{ marginBottom: \"10px\" }}\n        >\n          <Grid item className=\"card-title\">\n            {product.name}\n          </Grid>\n          <Grid item className=\"card-price\">\n            {this.numberWithCommas(product.price)}\n          </Grid>\n        </Grid>\n\n        <div className=\"card-description\">{product.description}</div>\n        <div className=\"card-furniture-style\">\n          {this.renderFurnitureStyle(product.furniture_style)}\n        </div>\n\n        <div className=\"card-delivery-time\">{product.delivery_time} Day</div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport API from \"./api\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Dropdown from \"./dropdown\";\nimport Card from \"./card\";\n\nclass Master extends Component {\n  state = {\n    furnitures: [],\n    styles: [],\n    deliveryTimes: [\n      { name: \"1 week\", value: \"1week\", selected: false },\n      { name: \"2 week\", value: \"2week\", selected: false },\n      { name: \"1 month\", value: \"1month\", selected: false },\n      { name: \"more\", value: \"more\", selected: false }\n    ],\n    shows: []\n  };\n\n  async componentDidMount() {\n    let furnitures = await API.getFurniture();\n    let shows = furnitures && furnitures.products ? furnitures.products : [];\n    let styles = [];\n\n    if (furnitures && furnitures.furniture_styles) {\n      for (let style of furnitures.furniture_styles) {\n        styles.push({ name: style, selected: false });\n      }\n    }\n\n    this.setState({ furnitures, shows, styles });\n  }\n\n  search = event => {\n    let shows = [...this.state.furnitures.products];\n    const search = event.target.value.toLowerCase();\n\n    shows = shows.filter(product =>\n      product.name.toLowerCase().includes(search)\n    );\n\n    this.setState({ shows });\n  };\n\n  selectStyle = index => {\n    let { styles } = this.state;\n\n    styles[index].selected = !styles[index].selected;\n\n    this.setState({ styles });\n  };\n\n  selectDeliveryTime = index => {\n    let { deliveryTimes } = this.state;\n\n    deliveryTimes[index].selected = !deliveryTimes[index].selected;\n\n    this.setState({ deliveryTimes });\n  };\n\n  filterByStyle = shows => {\n    const { styles } = this.state;\n    let selectedStyle = [];\n    let result = [];\n\n    for (let style of styles) {\n      if (style.selected) {\n        selectedStyle.push(style.name);\n      }\n    }\n\n    if (selectedStyle.length > 0) {\n      for (let style of selectedStyle) {\n        result = result.concat(\n          shows.filter(show => show.furniture_style.includes(style))\n        );\n      }\n\n      return this.getUniqueObjects(result);\n    } else {\n      return shows;\n    }\n  };\n\n  getUniqueObjects = objects => {\n    let uniqueObjects = [];\n    let check = [];\n\n    for (let object of objects) {\n      if (!check.includes(object.name)) {\n        uniqueObjects.push(object);\n        check.push(object.name);\n      }\n    }\n\n    return uniqueObjects;\n  };\n\n  filterByDeliveryTime = shows => {\n    const { deliveryTimes } = this.state;\n    let selectedDelivery = [];\n    let result = [];\n\n    for (let delivery of deliveryTimes) {\n      if (delivery.selected) {\n        selectedDelivery.push(delivery.name);\n      }\n    }\n\n    if (selectedDelivery.length > 0) {\n      for (let delivery of selectedDelivery) {\n        switch (delivery) {\n          case \"1 week\":\n            result = result.concat(\n              shows.filter(show => parseInt(show.delivery_time) <= 7)\n            );\n            break;\n\n          case \"2 week\":\n            result = result.concat(\n              shows.filter(\n                show =>\n                  parseInt(show.delivery_time) > 7 &&\n                  parseInt(show.delivery_time) <= 14\n              )\n            );\n            break;\n\n          case \"1 month\":\n            result = result.concat(\n              shows.filter(\n                show =>\n                  parseInt(show.delivery_time) > 14 &&\n                  parseInt(show.delivery_time) <= 28\n              )\n            );\n            break;\n\n          case \"more\":\n            result = result.concat(\n              shows.filter(show => parseInt(show.delivery_time) > 28)\n            );\n            break;\n        }\n      }\n\n      return this.getUniqueObjects(result);\n    } else {\n      return shows;\n    }\n  };\n\n  render() {\n    let { styles, deliveryTimes, shows } = this.state;\n\n    shows = this.filterByStyle(shows);\n    shows = this.filterByDeliveryTime(shows);\n\n    return (\n      <div className=\"master\">\n        <div className=\"filter\">\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"flex-start\"\n            spacing={2}\n            style={{ marginBottom: \"20px\" }}\n          >\n            <Grid item lg={6}>\n              <input\n                type=\"text\"\n                placeholder=\"Search Furniture\"\n                onChange={this.search}\n              ></input>\n\n              <hr />\n            </Grid>\n          </Grid>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"flex-start\"\n            spacing={2}\n          >\n            <Grid item lg={6}>\n              <Dropdown\n                id=\"furniture-style\"\n                label=\"Furniture Style\"\n                selections={styles}\n                onSelect={this.selectStyle}\n              />\n            </Grid>\n\n            <Grid item lg={6}>\n              <Dropdown\n                id=\"delivery-time\"\n                label=\"Delivery Time\"\n                selections={deliveryTimes}\n                onSelect={this.selectDeliveryTime}\n              />\n            </Grid>\n          </Grid>\n        </div>\n\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"flex-start\"\n          spacing={2}\n          style={{ padding: \"20px\" }}\n        >\n          {shows.map((product, i) => {\n            return (\n              <Grid key={i} item lg={6}>\n                <Card product={product} />\n              </Grid>\n            );\n          })}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Master;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Master from \"./components/master\";\n\nfunction App() {\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n      className=\"container\"\n    >\n      <Master />\n    </Grid>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}